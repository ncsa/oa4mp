#! /usr/bin/env -S qdl-run

/*
  Test RFC 7523 authorization and RFC 7636 PKCE (code challenge). Since PKCE might
  end up being required for OAuth 2.1, just implement it now and test it.
  This tries a bad verifier which should be rejected by the service.
*/

cfg.'id'  := 'ashigaru:command.line2';
cfg.'idp'  := 'ANY';
cfg.'file' := $$OA4MP_CLC_XML_INI;
cfg.'description' :=  'RFC 7523 and RFC 7636 bad PKCE verifier test';
cfg.'flow_type' := 'uri'; // Note to use df you need to set param for the token endpoint
params.'a' := {
 'org.oa4mp:/tokens/access/lifetime' : 1000000,
                  'org.oa4mp:/roles' : 'admin,all-user',
                    'code_challenge' : 'N_zjM2czxZIWNar-lWUiuS7-Pacwh-k-L_Akpje6AmY',
             'code_challenge_method' : 'S256'};

params.'token' := {'code_verifier' : 'bad verifier!!!' };

rc := script_load('driver.qdl', cfg., params.);
if[rc!='ok'][return(rc);];
  try[
      tokens. := clc#access();
      ‚ä® false : 'was able to get a token using a bad verifier';
  ]catch[
  ];
say('RFC 7523 and RFC 7636 test with bad verifier: ok');