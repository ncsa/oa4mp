#! /usr/bin/env -S qdl-run

/*
   Tests the client with an old configuration and does repeated refresh and token
   exchanges. This mimicks pretty rugged usages and checks that even over long
   chains of refreshes and exchanges the endpoints continue to work.
*/


cfg.'id'  := 'localhost:scitokens'; // name of the configuration, not the id
cfg.'idp'  := 'Github';
cfg.'file' := $$OA4MP_CLC_XML_INI;
cfg.'description' :=  'Test multiple refreshes only.';
cfg.'flow_type' := 'uri'; // Note to use df you need to set param for the token endpoint
user_id := 'http://cilogon.org/serverT/users/21340363';
params.'authz' :=  {'scope': 'read: x.y: x.z write:'}; // initial request is query
params.'token' :=  {'scope': 'read:/foo read:/home/' + user_id  + ' x.y:/abc/def/pqr write:/data/' + user_id + '/cluster/node47'};

params.'exchange' :=  {'scope': 'read:/home/'+user_id  + // read
                                ' write:/home/'+user_id + // write -- wrong, not granted
                                ' read:/public/lsst/' + user_id + // ok
                                ' x.y:/abc/def/pqr' + // works since it add component to path
                                ' x.y:/abc/defpqr'}; // not granted since the path is wrong

rc := script_load('driver.qdl', cfg., params.);
if[rc!='ok'][return(rc);];

tokens. := clc#access();
while[i âˆˆ[;10]][
  clc#refresh();
];

say('multiple refreshes: ok');