#! /usr/bin/env -S qdl-run

/*
   Tests running a sequence of QDL scripts on the server.
   Note that this also tests extended attribute support, which is
   enabled in the CLI (using the ea_support command). This should return
   a string of two values that can be parsed. 
*/
path := os_env('NCSA_DEV_INPUT')+'/oa4mp/server-test/src/main/resources/flow-tests';
if[path∉script_path()][script_path(path ~ script_path());];
/*
path := os_env('NCSA_DEV_INPUT')+'/oa4mp/server-test/src/main/resources/utils';
if[path∉script_path()][script_path(path ~ script_path());];
*/
script_load('/home/ncsa/dev/ncsa-git/oa4mp/server-test/src/main/resources/utils/xa-utils.qdl');
debugger(1);
xas. := to_xas('idt',{'foo':'bar'})~to_xas('at',{'group':'all','lifetime':1000000})~to_xas('rt',{'role':'admin'});
params. ≔ {'sub':'jeff'}~xas.;
say('params:\n'+print(params.));
clc#init('/home/ncsa/dev/csd/config/client-oa2.xml', 'localhost:test/rfc9068a');


tokens. := clc#rfc7523(params.);
claims. := clc#claims();
tokens. := clc#tokens();
say('umd:\n' + print(claims.));
say('at:\n' + print(tokens.'access_token'));
say('rt:\n' + print(tokens.'refresh_token'));

tokens. := clc#refresh();
claims. := clc#claims();
tokens. := clc#tokens();
say('umd:\n' + print(claims.));
say('at:\n' + print(tokens.'access_token'));
say('rt:\n' + print(tokens.'refresh_token'));


// No exchange at this point since that does nothing to the claims.
say('RFC7523 auth grant test: ok');