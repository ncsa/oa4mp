#! /usr/bin/env -S qdl-run

/*
   Tests an ersatz client
*/
path := '/home/ncsa/dev/ncsa-git/oa4mp/oa4mp-server-test-oauth2/src/main/resources/flow-tests';
if[path‚àâscript_path()][script_path(path ~ script_path());];

cfg.'id'  := 'localhost:command.line2';
cfg.'idp'  := 'UIUC';
cfg.'file' := '/home/ncsa/dev/csd/config/client-oa2.xml';
cfg.'description' :=  'Test ersatz client machinery.';
cfg.'flow_type' := 'df'; // Note to use df you need to set param for the token endpoint


params.'authz' :=  {
                    'scope': 'read: write: x.y',
          'code_challenge' : 'N_zjM2czxZIWNar-lWUiuS7-Pacwh-k-L_Akpje6AmY',
   'code_challenge_method' : 'S256'
   };
params.'token' := {
  'code_verifier' : 'qBdfP8Wmpomgkq6aJwcvZQMHx553RK4P7LAYxmzMAkmo8cM7MlE8ViJSOx38nlHr',
          'scope' : 'read: write: x.y'
   };
params.'exchange':={'scope':'read:/home/jeff write:/data/jeff/cluster x.y:/abc/def/ghi'};
rc := script_load('driver.qdl', cfg., params.);
if[rc!='ok'][return(rc);];

tokens. := clc#access();
// Save this, reload saved configuration.
original_claims. := claims();

saved_cfg := '/tmp/ersatz-test.json';
rm(saved_cfg); // just in case
clc#write(saved_cfg);
clc#init(cfg.'file', 'client:/my_ersatz');
clc#read(saved_cfg , '-p'); // -p switch tell client that this is an ersatz client


// Now go and do the exchanges for rt and at ASAP.
at. := exchange('-at').'access_token';
rt. := exchange('-rt').'refresh_token';
// check that the id token has been updated
tokens. := refresh();
claims. := claims();
‚ä® tokens.'access_token'.'lifetime' == 900000 : 'wrong access token lifetime';
‚ä® tokens.'refresh_token'.'lifetime' == 1800000 : 'wrong refresh token lifetime';
‚ä® claims().'aud' == 'client:/my_ersatz' : 'wrong audience';
‚ä® claims().'iss' == 'https://localhost:9443/oauth2/fermilab' : 'wrong issuer';
say('ùï∞ùñósùñÜùñôùñü client test: ok');