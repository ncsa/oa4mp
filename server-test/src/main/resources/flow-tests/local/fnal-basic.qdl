#! /usr/bin/env -S qdl-run

cfg.'id'  := 'localhost:test/fnal';
cfg.'idp'  := 'GitHub';
cfg.'file' := $$OA4MP_CLC_XML_INI;
cfg.'flow_type' := 'uri'; // Note to use df you need to set param for the token endpoint
cfg.'description' :=  'Test FNAL with basic scopes. No new scopes uploaded.';

params.'authz' :=  {'scope': 'storage.read:/ wlcg.capabilityset:/duneana wlcg.groups'};
rc := script_load('driver.qdl', cfg., params.);
if[rc!='ok'][return(rc);];

tokens. := clc#access();
at. := tokens.'access_token'.'jwt';
rt. := tokens.'refresh_token'.'jwt';
claims. := clc#claims();
iat := claims.'iat'; // for later, to check it changes
⊨ claims.'eppn' == 'cilogontest@fnal.gov' : 'wrong eppn';
⊨ is_defined(claims.'wlcg.credkey')  : 'missing wlcg.credkey';
⊨ 'cilogontest' == claims.'wlcg.credkey'  : 'wrong wlcg.credkey';
⊨ is_defined(at.'wlcg.ver') : 'Not a WLCG token';
⊨ at.'aud' == 'https://wlcg.cern.ch/jwt/v1/any' : 'incorrect access token audience';
⊨ rt.'aud' == 'https://wlcg.cern.ch/jwt/v1/any' : 'incorrect refresh token audience';
⊨ at.'sub' == 'cilogontestsub0001': 'wrong subject';
expected_scopes. := ['compute.cancel',
                      'compute.create',
                      'compute.modify',
                      'compute.read',
                      'storage.create:/persistent/jobsub/jobs',
                      'storage.create:/resilient/jobsub_stage',
                      'storage.create:/scratch/users/cilogontest',
                      'storage.read:/',
                      'storage.read:/resilient/jobsub_stage'
                     ];
ss. := tokenize(at.'scope', ' ');
⊨ reduce(@&&, expected_scopes. ∈ ss.) : 'incorrect initial access token scopes, got\n' + print(at.'scope') + '\nexpected:\n ' + print(expected_scopes.);
⊨ abs(tokens.'access_token'.'lifetime' - 750000)<2000 : 'wrong lifetime, expected 750000, got ' + (tokens.'access_token'.'lifetime');

/* Refresh */
tokens. := clc#refresh();
at. := tokens.'access_token'.'jwt';
rt. := tokens.'refresh_token'.'jwt';
claims. := clc#claims();
⊨ claims.'iat' != iat : 'id token timestamp did not change. This implies the token is not updating.';
⊨ claims.'eppn' == 'cilogontest@fnal.gov' : 'wrong eppn';
⊨ is_defined(claims.'wlcg.credkey')  : 'missing wlcg.credkey';
⊨ 'cilogontest' == claims.'wlcg.credkey'  : 'wrong wlcg.credkey';
⊨ is_defined(at.'wlcg.ver') : 'Not a WLCG token';
⊨ at.'aud' == 'https://wlcg.cern.ch/jwt/v1/any' : 'incorrect access token audience';
⊨ rt.'aud' == 'https://wlcg.cern.ch/jwt/v1/any' : 'incorrect refresh token audience';
⊨ at.'sub' == 'cilogontestsub0001': 'wrong subject, got '+ (at.'sub') + ', expected ' + ('cilogonsub0001');
//expected_scopes. := ['compute.create', 'compute.read', 'compute.cancel', 'compute.modify', 'storage.create:/dune/scratch/users/cilogontest', 'storage.read:/dune'];
ss. := tokenize(at.'scope', ' ');
⊨ reduce(@&&, expected_scopes. ∈ ss.) : 'incorrect access token scopes';
⊨ abs(tokens.'access_token'.'lifetime' - 750000)<2000 : 'wrong lifetime, expected 750000, got ' + (tokens.'access_token'.'lifetime');

/* Exchange */
at. := clc#exchange('-at').'access_token';
rt. := clc#exchange('-rt').'refresh_token';
⊨ at.'jwt'.'sub' == 'cilogontestsub0001': ' post exchange, access token has wrong subject, expected ' + ('cilogontestsub0001') + ' got ' + (at.'jwt'.'sub');
ss. := tokenize(at.'jwt'.'scope', ' ');
⊨ reduce(@&&, expected_scopes. ∈ ss.) : 'after exchange incorrect access token scopes, expected\n' + print(expected_scopes.) + '\ngot\n' + print(ss.) ;
⊨ abs(at.'lifetime' -750000)<2000 : 'wrong lifetime, expected 750000, got ' + (at.'lifetime');


/*
at.'access_token' := clc#exchange('-at');
rt.'refresh_token' := clc#exchange('-rt');
expected_scopes. := ['compute.create', 'compute.read', 'compute.cancel', 'compute.modify'];
ss. := tokenize(at.'scope', ' ');
⊨ reduce(@&&, expected_scopes. ∈ ss.) : 'incorrect access token scopes';
⊨ abs(tokens.'access_token'.'lifetime' -750000)<2000 : 'wrong lifetime, expected 750000, got ' + (tokens.'access_token'.'lifetime');
*/

say('FNAL basic test: ok');
