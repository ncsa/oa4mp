#! /usr/bin/env -S qdl-run
// If you want to run an individual test, add the next two lines to it or none of the utilities
// will be found.

path := os_env('NCSA_DEV_INPUT')+'/oa4mp/server-test/src/main/resources/flow-tests';
script_path(path ~ script_path());
test. := args().0;
skip_line := 1<size(args())?args().1:false; // print a blank line between tests?

counter.'pass' := 0;
counter.'fail' := 0;
counter.'skipped' := 0;
failures. := [];
rc := null;// set scope for it
while[x∈test.][
try[
  if  [var_type(x) == 4]
  then[
       zzz.:=x;
       //contract is that two arguments [a,b] are interpreted
       // as script_load(a,b), but [a,b,...,c] as
       // script_load(a, [b,...c]) i.e. rolled into a list.
       rc:=script_load(zzz.0, 2==size(zzz.)?zzz.1:sublist(zzz., 1));
       ]
  else[rc := script_load(x);];

  if[rc == 'q'][break();]; // exit app
  if[rc=='s'][counter.'skipped'+=1;continue();]; // skip this test
  if[!skip_line][say('');]; // blank line for clean display.
  counter.'pass' += 1;
  ]catch[
     say('error running script ' + x);
     say('error message:' + error_message);
    counter.'fail' += 1;
    failures. := failures. ~ x;
  ];
];

say(counter.'pass' + ' passed');
say(counter.'fail' + ' failed');
say(counter.'skipped' + ' skipped');
say('total tests run: ' + reduce(@+, counter.));
// hand back a nice list
if[0 < size(failures.)][
  say('failed tests :' );
  while[x ∈ failures.][
     say('   ' + x);
  ];
];