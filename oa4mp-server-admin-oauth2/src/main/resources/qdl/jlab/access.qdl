/*
    Access token support for Jefferson Lab. Typical configuration for the client
    is

     tokens{
       access{
          type=sci_token
          qdl{
             load="jlab/access.qdl"
              args=["eic"]
              xmd={exec_phase=["post_token","post_refresh","post_exchange"]}
          } //end QDL
       } // end access token
     } //end tokens

NOTE that the args are "eic" for EIC or "jlab" for everything else.

*/
//script_load('jlab/acl.qdl');


     DEBUG := true; // set false everywhere but on my test server.
        γ. := null; // groups
       γ2. := null; // other groups
        α. := null; // permissions
 if[
   script_args(0) == 'eic'
   ][
        γ. := ['eic computing', 'eic computing'];
        α. := ['read:/eic/', 'write:/eic/'];
   ]else[
        γ. := ['clas12 computing', 'gluex computing','gluex computing', 'moller computing'];
        α. := ['read:/clas12/','read:/gluex/', 'write:/gluex/', 'read:/moller/'];
   ];
  user := DEBUG?'http://cilogon.org/serverT/users/27326098':claims.sub;

  results. := script_load('jlab/get_user.qdl', user); // user == claims.sub
  
  say('*** JLAB result of query =' + to_string(results.));
    if[
       	 !is_defined(results.isMemberOf) // indicates something is wrong with their LDAP (?)
      ][
                 sys_err.ok := false;
            sys_err.message := 'no group memberships found.';
         sys_err.error_type := 'access_denied';
            return([]);
    ];

    say('*** JLAB results.isMemberOf=' + to_string(results.isMemberOf));
        σ. := size(tx_scopes.) == 0?scopes.:tx_scopes.; // current requested scopes.
        β. := mask(α., γ. ∈ results.isMemberOf)∈ σ.; // bit mask of allowed scopes, groups

      access_token.'aud' := 'ANY';
    access_token.'scope' := detokenize(mask(α.,β.), ' ', 2); // turn in to string, omit trailing space
// 2022-08-23 add group.
                     γ2. := γ. - ' computing';
    access_token.'group' := unique(mask(γ2.,β.)).0; // turn in to string should be unique.

//x. := ['CO:members:all','CO:COU:gluex:members:all','CO:members:active','CO:COU:gluex:members:active','gluex computing']