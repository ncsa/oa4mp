/*

*/

/*
  * Use OIDC tokens
  * Tokens can only be obtained by COPeople in group MattermostUsers at https://comanage-test.sdcc.bnl.gov/registry/co_groups/edit/41
  * Refresh token is not required.
  * Audience for access token should be set to OIDC client ID.
  * ID token “sub” claim should be set to “sdccid” of logged in user.
    This number is currently provisioned into “employeeNumber” field of LDAP.
  * ID token claim “isMemberOf” should contain a list of Registry groups to which the logged in user belongs.
    This is currently provisioned into “isMemberOf” in LDAP
  * ID token claim “mattermostid” should contain the mattermostid attribute of the COPerson if defined.
    This value is currently provisioned in “voPersonExternalID” field of LDAP.
  * ID token “acr” claim should convey information from the IDP as to whether the user logged in
    with Single Factor Authorization(SFA) or Multifactor Authorization(MFA)
  * Users that are denied authorization at the issuer should be redirected to the help page
    located at https://www.sdcc.bnl.gov/attempt-failed-mattermost
       LDAP fields employeeNumber -> sdccid
                   isMemberOf
                   voPersonExternalID -> mattermostid
                   acr
*/
/*
    Access token support for Jefferson Lab. Typical configuration for the client
    is
tokens {
    identity {
         type = "identity"
        qdl {
            load="bnl/matter_most/v1/id-token.qdl"
            xmd {
                "exec_phase"=["post_all"]
            }
    }}}
*/
//script_load('bnl/acl.qdl');
script_load('utils/init.qdl'); // set up stuff


     DEBUG := true; // set false everywhere but on my test server.
 // Robert Hancock's uid.
  if [DEBUG]
then [
      claims.'eppn':='hancock@bnl.gov';
      claims.'sub' := 'http://cilogon.org/serverA/users/1774626';
     ];

user := claims.sub;
SS('BNL-MM','starting id-token for user =' + user);


       γ := 'MattermostUsers'; // group
results. := script_load('bnl/matter_most/v1/get_user.qdl', user); // user == claims.sub
 SS('BNL-MM','result of query =' + to_string(results.));

  if [!is_defined(results.'isMemberOf')] // indicates something is wrong with their LDAP (?)
then [ err('no group memberships found.', 'access_denied');];

  if [γ ∉ results.'isMemberOf']
then [uri :='https://www.sdcc.bnl.gov/attempt-failed-mattermost'+
            '?error=access_denied' +
            '&error_description=' + encode('user not in group',1) +
            '&serviceid=mattermost';
    err_uri('user not in group',uri);
    ];

          claims.'sub' := results.'sdccid';
   claims.'isMemberOf' := results.'isMemberOf';
 claims.'mattermostid' := results.'mattermostid';
