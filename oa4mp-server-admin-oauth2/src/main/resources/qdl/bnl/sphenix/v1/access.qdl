//script_load('bnl/acl.qdl');
                   a. := (size(tx_audience.) == 0)?audience.:tx_audience.;
                   s. := (size(tx_scopes.) == 0)?scopes.:tx_scopes.;
 SS('BNL', 's. == ' + to_string(s.));
 SS('BNL', 'a. == ' + to_string(a.));

 // Now for the actual work
 // strip aff all that start with allowed scopes, omit duplicates, turn in to space-delimited string.
      allowed_scopes. := ['storage.create:/', 'storage.read:/', 'storage.modify:/', 'compute.read', 'compute.cancel', 'compute.create'];
                 out. := ~mask(s., reduce(@||,for_each(@<=, allowed_scopes., s.)));
        //       out. := ~mask(s., reduce(⊗∨,⊗<=∀[allowed_scopes., s.])) ;

 access_token.'scope' := detokenize(unique(out.), ' ', 2);
   access_token.'aud' := size(a.)==0?access_control.client_id:a.;
   access_token.'iss' := size(a.)==0?'https://cilogon.org/bnlsdcc':a.;
   access_token.'sub' := hash(access_control.client_id);