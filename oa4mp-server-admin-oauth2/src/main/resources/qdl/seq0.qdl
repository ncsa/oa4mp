/*

  Test to show that sequences of QDL scripts can be loaded and run in order.

{"tokens": {"identity": {
   "qdl":  [
      {
     "load": "seq0.qdl",
     "args":    {
      "bind_dn": "bind_dn",
      "bind_password": "abcdefghijkl",
      "return_attributes": ["isMemberOf"],
      "search_attribute": "uid",
      "port": 636
     },
     "xmd": {"exec_phase":    [
      "post_auth",
      "post_refresh",
      "post_token",
      "post_user_info"
     ]}
    },
      {
     "load": "seq1.qdl",
     "args": {"isMemberOf": "is_member_of"},
     "xmd": {"exec_phase":    [
      "post_auth",
      "post_refresh",
      "post_token",
      "post_user_info"
     ]}
    },
          {
         "load": "seq2.qdl",
         "args": {"isMemberOf": "is_member_of"},
         "xmd": {"exec_phase":    [
          "post_auth",
          "post_refresh",
          "post_token",
          "post_user_info"
         ]}
        }

   ],
  "type": "identity"
}}}
*/
say('seq 0');
say(size(args()));
say('xas.=' + to_string(xas.));
claims.'seq0' := args().0.'port'; // returns 636
claims.'seq0_phase' := exec_phase; // returns current exec phase
claims.'roles' := xas.'oa4mp'.'/roles';
/*  Uncomment to test error handling. */
/*
  raise_error('raise_error test', oa4mp_code, {'message':'error test', 'error_type' :
     'error_type_message','error_uri':'https://localhost/oops'});
*/
