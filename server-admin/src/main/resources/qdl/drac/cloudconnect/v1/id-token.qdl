/*
Current policy is at https://github.com/cilogon/drac-policies/blob/main/DRAC_Policy_Specification.md

Note that this runs in the post_auth phase only since
the only place that there is a browser to redirect from
is during the auth phase.
Configurations for the client are either

{"tokens": {
  "identity": {
    "qdl":  {
     "load": "drac/v1/id-token.qdl",
     "xmd": {"exec_phase": ["post_auth"]}
    },
  "type": "identity"
  }
}}

which checks if the user is in the base gorup
      CO:COU:UVic Staff:members:active.

Or the following,
which may have another argument for an additional group(s)
or list of them that this person must be
a member of, in addition to the base group.

{"tokens": {
  "identity": {
    "qdl":  {
     "load": "drac/v1/id-token.qdl",
     "args":['CO:COU:CADC:members:active'],
     "xmd": {"exec_phase": ["post_auth"]}
    },
  "type": "identity"
  }
}}

N.B. No refresh tokens!
*/
script_load('drac/acl.qdl');
script_load('utils/init.qdl'); // set up stuff
debugger(1);

   drac_cc := 'DRAC'; // moniker for debugging
   groups. := ['CO:COU:UVic Staff:members:active']; // Everyone is in here
 error_uri := 'https://object-arbutus.cloud.computecanada.ca/cilogon/error.html';
  results. := script_load('drac/v1/get-user.qdl', claims.'sub'); // user == claims.sub

trace(drac_cc,'result of user query =' + to_string(results.));

                         size(args()) ≡ 1 ⇒ groups. := groups.~args().0;
                  (∄results.'isMemberOf') ⇒ err_uri('no groups for user found',error_uri);
(true ∉ (groups. ∈ results.'isMemberOf')) ⇒ err_uri('user not in group', error_uri);