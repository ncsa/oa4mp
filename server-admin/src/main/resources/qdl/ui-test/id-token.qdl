/*
   This is a test for the user info endpoint. What should happen is that this
   file is called in the post_auth phase, It only sets up a file claim source
   and adds it to the list of sources.
   Then in the access, refresh and user_info phases, the process.qdl file is called.


 tokens{
  identity{
     type=identity
     qdl{
         load="ui-test/id-token.qdl"
         xmd={exec_phase="post_auth"}
       }// end qdl
     } //end identity token
     access{
        type=default
        qdl{
           load="ui-test/process.qdl"
           xmd={exec_phase=["post_token","post_refresh","post_user_info"]}
        } //end QDL
     } // end access token
   } //end tokens

*/

cfg. := new_template('file');
say(to_string('*** user_info dir = ' + to_string(dir('vfs#/scripts/'))));
/*

   ╔══════════════════════════════════════════════════════════════════════════════╗
   ║  NOTE: You CANNOT use a QDL path for file_path since the last line hands     ║
   ║  over control of the claim source to OA4MP, which is then invoked by the     ║
   ║  FSClaimSource handler there -- i.e., it is given to a non-QDL               ║
   ║ component to manage.                                                         ║
   ╚══════════════════════════════════════════════════════════════════════════════╝

*/
cfg.file_path := '/home/ncsa/dev/ncsa-git/oa4mp/server-admin/src/main/resources/qdl/ui-test/ui-test.json';
cfg.'claim_key' := 'eppn'; 
claims.'eppn' := 'jgaynor@foo.bar'; // set it for testing later. Use GitHub for IDP so this can be set here.
say('claims.eppn set');
claim_sources. := claim_sources. ~ [create_source(cfg.)]; // test automated getting claims
