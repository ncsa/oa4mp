/*
   A script for testing server side utilities (such as the token handlers) that require a running
   service with all its state. Drop your code here and run it with


{"tokens": {
    "access":  {
     "aud": "https://localhost/test",
     "audience": "https://localhost/test",
     "lifetime": 300000,
     "type": "rfc9068",
      qdl{
                load="test.qdl"
                xmd={exec_phase=["post_token","post_refresh","post_exchange"]}
                args=["USER_ID", "PASSWORD"]
             }
    },
    "refresh":  {
     "audience": "https://localhost/test",
     "lifetime": 900000,
     "type": "refresh"
    }
   }}


*/
// Note in test mode, the server mode flag is set to false so we can look at
// the output.
say('*** QDL test script: test.qdl');
say('auth_headers:\n' + print(auth_headers.));
z.'sub' := 'foo';
z.'baz' := 'bar';
say('test z: ' + to_string(z.));
say('script args: ' +to_string(size(args())));
claims.'ϑ' := 'my-ϑ'; // funky character so we can find this output in the logs fast.
say('set claims to ' + to_string(claims.));
