/*
  Registry is at https://comanage.sdcc.bnl.gov/registry/

*/

/*
    As per https://github.com/cilogon/bnl-policies/blob/main/BNL-SDCC_Policy_Specification.md

   Sciserver

     * OIDC client ID on PROD is currently
           cilogon:/client_id/567b3d6699953c024dc293e5a725b29d
     * OIDC client on TEST is currently
           cilogon:/client_id/5a0230641917afc52b5fbf0a9954df36
    *  Policy:
           * Use OIDC tokens [sic]
           * Tokens can only be obtained by COPeople in group SciserverUsers
           * Refresh token is not required.
           * Access token can be just an opaque string.
           * Audience for ID token should be set to OIDC client ID.
           * ID token “sub” claim should be set to “sdccid” of logged in user. This number is currently provisioned into the “voPersonID” field of LDAP.
           * ID token claim “isMemberOf” should contain a list of Registry groups to which the logged in user belongs. This is currently provisioned into “isMemberOf” in LDAP
           * The following scopes are allowed openid, profile, email, org.cilogon.userinfo
           * ID token “acr” claim should convey information from the IDP as to whether the user logged in with Single Factor Authorization(SFA) or Multifactor Authorization(MFA)
           * Users that are denied authorization at the issuer should be redirected to the help page located at https://www.sdcc.bnl.gov/registry-login-error.php
               The following get parameters should be sent
                  * error
                       Same as would normally go to client callback uri
                  * error_description
                       Same as would normally go to client callback uri
                  * serviceid
                       the literal string “sciserver”
           * The allowed IDP list for this client should only include: https://idp.ameslab.gov/idp/shibboleth" https://identityprovider.anl.gov/idp/shibboleth" https://idp.bnl.gov/idp/shibboleth" https://idp.sdcc.bnl.gov/idp" https://idp.fnal.gov/idp/shibboleth" https://idp.ornl.gov/idp"

/*
    Access token support for Brookhaven Lab's SciServer client. Typical configuration for the client
    is
tokens {
    identity {
         type = "identity"
        qdl {
            load="bnl/sciserver/v1/id-token.qdl"
            xmd {
                "exec_phase"=["post_all"]
            }
    }}}

Note that this runs in the post_auth phase only since the sub claim is over-written
AND the only place that the redirect from the error makes sense is during the auth
phase since there is a browser to redirect.

{"tokens": {"identity": {
  "qdl":  {
   "load": "bnl/sciserver/v1/id-token.qdl",
   "xmd": {"exec_phase": ["post_all"]}
  },
  "type": "identity"
 }}}
    // Note. No refresh tokens!
*/
//script_load('bnl/acl.qdl');
script_load('utils/init.qdl'); // set up stuff

   debugger(1);
     DEBUG := true; // set false everywhere but on my test server.
 // Robert Hancock's uid.
  if [DEBUG]
then [// Note that this does reset these every time called, so the get_user always works
      // unlike production, where the sub gets reset on the first pass.
      claims.'eppn':='hancock@bnl.gov';
      claims.'sub' := 'http://cilogon.org/serverA/users/1774626';
     ];
bnl_sciserver := 'BNL-SCIServer'; // moniker for debugging
user := claims.sub;
trace(bnl_sciserver,'starting id-token for user =' + user);


results. := script_load('bnl/sciserver/v1/get_user.qdl', user); // user == claims.sub
 trace(bnl_sciserver,'result of user query =' + to_string(results.));
 // bomb if there is no sdccid asserted
  if [∄results.'sdccid']
then [uri :='https://www.sdcc.bnl.gov/registry-login-error.php'+
            '?error=access_denied' +
            '&error_description=' + encode('user not found',1) +
            '&serviceid=sciserver';
    err_uri('user not found',uri);
    ];
 // bomb if there is no isMemberOf claim
  if [∄results.'isMemberOf']
then [uri :='https://www.sdcc.bnl.gov/registry-login-error.php'+
            '?error=access_denied' +
            '&error_description=' + encode('groups not found',1) +
            '&serviceid=sciserver';
    err_uri('groups not found',uri);
    ];
 // actual security policy: reject anyone not in the specified group.
   if ['SciserverUsers'∉results.'isMemberOf']
 then [uri :='https://www.sdcc.bnl.gov/registry-login-error.php'+
             '?error=access_denied' +
             '&error_description=' + encode('user not in SciserverUsers group',1) +
             '&serviceid=sciserver';
     err_uri('user not in SciserverUsers group',uri);
     ];
           claims.'sub' := results.'sdccid';
    claims.'isMemberOf' := results.'isMemberOf';
trace(bnl_sciserver, 'returning:\n' + print(claims.));