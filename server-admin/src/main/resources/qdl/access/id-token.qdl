/*
 tokens{
  identity{
     type=identity
     qdl{
         load="access/id-token.qdl"
         xmd={exec_phase="post_all"}
       }// end qdl
     } //end identity token
   } //end tokens

Created by Jeff Gaynor
2022-07-26T14:43:49.023Z
*/

script_load('access/acl.qdl');

    access_idp := 'https://access-ci.org/idp';
/*F
if[
    is_defined(claims.'eppn')
  ][
    claims.'sub':=(claims.'idp'=='https://access-ci.org/idp')?claims.'eppn':claims.'sub';
  ];
*/

if[
  !is_defined(claims.'idp')
][
    if[
     'org.cilogon.userinfo' ∉ scopes.]
    [
      say('*** ACCESS warning. No idp but scopes were ' + to_string(scopes.));
    ];
              sys_err.ok := false;
       sys_err.error_type := 'invalid_request';
         sys_err.message := 'the org.cilogon.userinfo scope is required.';
         return([]);
  ];

user. :=  script_load('access/get_user.qdl', (claims.'idp' == access_idp)?claims.'eppn':claims.'uid');
// User should have exactly the information from LDAP.
if[
    size(user.) == 0
  ][
             sys_err.ok := false;
      sys_err.error_type := 'user_not_found';
        sys_err.message := 'user not found';
      sys_err.error_uri := 'https://identity.access-ci.org/user-not-registered';
        return([]);
  ];

if[
   ('AccessDenied' ∈ user.'isMemberOf') ∨ ('CO:members:active' ∉ user.'isMemberOf') // CIL-1428
][
             sys_err.ok := false;
      sys_err.error_type := 'access_denied';
        sys_err.message := 'access denied';
      sys_err.error_uri := 'https://identity.access-ci.org/user-access-denied';
        return([]);         
];

remove(user.'isMemberOf'); // don't return this, just use it for access control
claims. := claims.~user.;

/*

CIL-1349 note:


    If the IdP is the "ACCESS CI" IdP, query for voPersonExternalID matching the eppn
    otherwise query for voPersonExternalID matching the CILogon uid
    if found:
        if isMemberOf: AccessDenied then
            redirect to https://identity.access-ci.org/user-access-denied
        else
            set sub claim to uid from LDAP appended with "@access-ci.org" (e.g., jgaynor@access-ci.org)
            set given_name claim to givenName from LDAP
            set family_name claim to sn from LDAP
            set name claim to cn from LDAP
            set email claim to mail from LDAP
            set organization claim to o from LDAP
            set preferred_username claim to uid from LDAP
    if not found:
        redirect to https://identity.access-ci.org/user-not-registered


*/