<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html
        PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <title>Monitoring servers.</title>
    <!--#include virtual="../../head.html" -->
</head>

<body class="composite">
<!--#include virtual="../../header.html" -->

<p>
    A monitor is simply a client which executes the initial call to an OA4MP server. This works solely
    from the command line -- no web server is needed. This is exactly the analog of the ping command
    in that it shows the server up and active. Since a full test of the lifecycle requires that the client
    be able to accept callbacks i.e. be running a web server,
    it is not possible to test more than the first call. The intent of the monitor is
    not to show that everything about
    <a href="../../client/index.html">configuring a client</a> still works.
</p>

<p>To get a functional monitor, you  would get
    <a href="https://github.com/ncsa/oa4mp/releases/latest/download/oa2-monitor.jar">oa2-monitor.jar</a>
    with the script at <a href="https://github.com/ncsa/oa4mp/releases/latest/download/oa2-monitor">oa2-monitor</a>
    The default setup is like any other <a href="../manuals/cli.html">command
        line tool</a>
    with an identical directory layout and it will try to use the configuration found in the default location
    of <code>/opt/oa4mp/etc/admin-cfg.xml</code>.
</p>

<p>Steps to set up a monitor are </p>

    <ol>
        <li> Register it with a server <br/>
    <a href="../../client/manuals/registering-with-an-oauth2-server.html">
    <span style="background-color: #ff6600;">OAuth 2.0</span> based servers. </a></li>

    <li> Write a configuration file. This should have
    <a href="../configuration/server-email.html">mail configured</a>.
    </li>
    </ol>
<p>
    A quick comment about the callback: The callback supplied <b>must</b> match one of the ones given at
    registration time or the initial request will be rejected. The comparison is done as strings as per the specification,
    so logically equivalent callbacks (such as having parameters switched) will fail.

    3. Run it once from the command line to see if it works by using the oa4mp-monitor script.
    <br/><br/>
    4. Setup a chron job or use monit or whatever tool you prefer to invoke oa4mp-server at some specific interval,
    e.g. every 5 minutes. The monitor will send an email notification whenever an attempt to contact the server fails.
</p>

<!--#include virtual="../../footer.html" -->
</body>
</html>